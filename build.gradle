buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

plugins { id "com.modrinth.minotaur" version "2.+" }
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven-publish'
if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.20_tech/gradletools.gradle'
}

group = "com.github.mcjty"
archivesBaseName = "lostcities"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

repos()
minecraft {
    mappings channel: 'parchment', version: "2023.06.26-1.20.1"
//        mappings channel: 'official', version: "${minecraft_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        data {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run').canonicalPath
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'lostcities', '--mod', 'create_lost_cities', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]
            source sourceSets.main
        }
    }
}
jars('lostcities')

sourceSets.main.resources {
    srcDir 'src/generated/resources/lostcities'
    srcDir 'src/generated/resources/create_lost_cities'
}

repositories {
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
}

dependencies {
    mc()
    jei()
    top()
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
}

cfdeps(['the-one-probe'], [], [])
modrinth(['the-one-probe'], [], [])

task apiJar(type: Jar) {
    classifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/lostcities/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    publications.create('mavenJava', MavenPublication) {
        from components.java
        artifact apiJar

        artifactId = project.archivesBaseName
        pom {
            name = 'LostCities'
            description = 'Lost Cities'
            scm {
                url = 'https://github.com/McJtyMods/LostCities'
                connection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
                developerConnection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
            }
            issueManagement {
                system = 'github'
                url = 'https://github.com/McJtyMods/LostCities/issues'
            }
            licenses {
                license {
                    name = 'MIT'
                    distribution = 'repo'
                }
            }
            developers {
                developer {
                    id = 'McJty'
                    name = 'McJty'
                    roles = ['developer']
                }
            }
        }
    }
    repositories {
        if (System.getenv('local_maven') != null) {
            maven {
                name = 'local'
                url = 'file://' + System.getenv('local_maven')
            }
        }
    }
}


